<div id="deviceAnalyticsReportingContainer">

  <button id='timeFrame_now'>Now</button>
  Delta Change:  <span id='timeFrame_deltaChange'></span> <br />
  <!-- Instantaneous gradient: <span></span> <br />
  Average Gradient: <span></span> <br /> -->
  Time-Frame avrg: <span id='timeFrame_timeFrameAvrg'></span> <br />



</div>



<script>

    //get target container for ui bindings
    var deviceAnalyticsReportingContainer = document.querySelectorAll("div.deviceAnalyticsReportingContainer");

    //calculate the mean of an array
    // pipe raw dataset without doc
    calculatePresets = (dataBundle) => {
        // console.log('hi');
        //create data object
        dataOBJ = {
          x: [],
          y: [],
          xLength: null,
          yLength: null,
          firstDataPoint: {x:null,y:null},
          lastDataPoint: {x:null,y:null},
        }

        let x = dataOBJ.x
        let y = dataOBJ.y

        dataBundle.forEach((item, i) => {
          // console.log(item.data);
          y.push(item.data);
          x.push(item.eventTriggerDate)
        });

        // testLength of data set
        dataOBJ.xLength = x.length
        dataOBJ.yLength = y.length


        //get first and last datapoint
        dataOBJ.firstDataPoint.x = x[0]
        dataOBJ.firstDataPoint.y = y[0]


        dataOBJ.lastDataPoint.x = x[dataOBJ.xLength-1]
        dataOBJ.lastDataPoint.y = y[dataOBJ.yLength-1]

        return dataOBJ;

    };

    //once global veriable is availible run
    window.onload =  () => {
    //get data doc from global scope and select down to data then run preset funtion
    targetDeviceDataSet = calculatePresets(targetUIDDBDoc.doc.data)
    // console.log(targetDeviceDataSet);

////////////////////////////////////////////////////////////////////////////////

    //   {x: Array(669), y: Array(669), xLength: 669, yLength: 669, firstDataPoint: {…}, …}
    //   firstDataPoint: {x: "2020-06-30 15:57:22", y: 101}
    //   lastDataPoint: {x: "2020-07-01 16:37:20", y: 101}
    //   x: (669) ["2020-06-30 15:57:22", "2020-06-30 15:57:27", "2020-06-30 15:57:32", "2020-06-30 15:57:37", "2020-06-30 15:57:42", "2020-06-30 15:57:47", "2020-06-30 15:57:52", "2020-06-30 15:57:57", "2020-06-30 15:58:02", "2020-06-30 15:58:07", "2020-06-30 15:58:12", "2020-06-30 15:58:17", "2020-06-30 15:58:22", "2020-06-30 15:58:27", "2020-06-30 15:58:32", "2020-06-30 15:58:37", "2020-06-30 15:58:42", "2020-06-30 15:58:47", "2020-06-30 15:58:52", "2020-06-30 15:58:57", "2020-06-30 15:59:02", "2020-06-30 15:59:07", "2020-06-30 16:05:54", "2020-06-30 16:05:59", "2020-06-30 16:06:04", "2020-06-30 16:06:09", "2020-06-30 16:06:14", "2020-06-30 16:06:19", "2020-06-30 16:06:24", "2020-06-30 16:06:29", "2020-06-30 16:06:34", …]
    //   xLength: 669
    //   y: (669) [101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 102, 102, 101, 101, 101, 101, 101, 102, 101, 101, 101, 101, 101, 102, 101, 101, 101, 101, 101, 102, 102, 102, 101, 101, 101, 101, 100, 101, 101, 101, 100, 100, 101, 101, 101, 100, 101, 101, 101, 101, 101, 101, 101, 100, 100, 100, 100, 101, 101, 101, 101, 101, 101, 100, 101, 100, 100, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 100, 100, 100, 100, 101, …]
    //   yLength: 669

////////////////////////////////////////////////////////////////////////////////


      //calculte mean of dataset in targetDeviceDataSet.y where x is a date
      meanOutput = setMean(targetDeviceDataSet.y)
      // var meanOutPutDOM = document.querySelector("div.deviceAnalyticsReportingContainer span#timeFrame_timeFrameAvrg");
      var meanOutPutDOM = document.querySelector("span#timeFrame_timeFrameAvrg");
      meanOutPutDOM.innerHTML = meanOutput
      console.log(meanOutPutDOM);

      //calculate change between the first and last datapoint y where x is a date
      deltaChangeOutput = deltaChange(targetDeviceDataSet.firstDataPoint.y, targetDeviceDataSet.lastDataPoint.y);
      var deltaChangetDOM = document.querySelector("span#timeFrame_deltaChange");
      deltaChangetDOM.innerHTML = deltaChangeOutput
      console.log(deltaChangetDOM);
      
    }



</script>
