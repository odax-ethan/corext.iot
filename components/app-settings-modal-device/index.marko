<!-- Trigger/Open The Modal -->
<a id=`targetBoard_${input.targetBoard}_device_${input.targetDevice}_btn` onclick=`openDevice("${input.targetBoard}","${input.targetDevice}")`><i class="fas fa-cogs"></i></a>

<!-- The Modal -->
<div id=`${input.targetBoard}_${input.targetDevice}_Modal` class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <span id=`targetBoard_${input.targetBoard}_device_${input.targetDevice}_Modal_closer` class='close'>&times;</span>

    <!-- lets create a new device

    <for|boards| of=input.hardwareBank>
          <if(boards.id === input.targetBoard)>
             BoardName: <input id='boardID' value='${boards.id}'> <br />
         </if>
     </for> -->

     <div id="device_container">


       <for|boards| of= input.hardwareBank>

              <if(boards.id === input.targetBoard)>

                 <p> device @ ${boards.id} </p>

                 <for|device| of= boards.devices>

                       <if(device.deviceID === input.targetDevice)>
                              <if(device.deviceTYPE === 'relay')>

                                   DeviceName: <input id='deviceID_${device.deviceID}' value='${device.deviceID}'> <br />
                                   Device Type: <input id='deviceTYPE_${device.deviceID}' value='${device.deviceTYPE}'> <br />
                                   Color <input  id='deviceColor_${device.deviceID}' value='${device.color}' class="device-adder-color-picker" data-huebee='{ "notation": "rgb", "saturations": 2 }' /> <br>
                                   Device Pin: <input id='devicePIN_${device.deviceID}' value='${device.devicePIN}'> <br />
                                   Relay Type: <input id='relayType_${device.deviceID}' value='${device.relayType}'> <br />

                                   <hr />
                                   <!-- for each cron print cron -->
                                   <for|cron, index| of=device.cron>
                                      CRON id: ${cron.cronID} <br />
                                      CRON string: ${cron.cronOBJ} <br />
                                      CRON Type:  ${cron.cronTYPE} <br />
                                      CRON Burst Length:  ${cron.cronEventLength} <br />
                                      <hr />
                                  </for>

                                  <hr />


                              </if>
                              <if(device.deviceTYPE === 'thermometer')>
                                  DeviceName: <input id='deviceID_${device.deviceID}' value='${device.deviceID}'> <br />
                                  Device Type: <input id='deviceTYPE_${device.deviceID}' value='${device.deviceTYPE}'> <br />
                                  Color <input  id='deviceColor_${device.deviceID}' value='${device.color}' class="device-adder-color-picker" data-huebee='{ "notation": "rgb", "saturations": 2 }' /> <br>
                                  Device Frequancy: <input id='freq_${device.deviceID}' value=' ${device.freq}'> <br />
                                  Device Pin: <input id='devicePIN_${device.deviceID}' value='${device.devicePIN}'> <br />
                                  Sensor Controller: <input id='controller_${device.deviceID}' value='${device.controller}'> <br />

                              </if>
                        </if>

                 </for>

              </if>

         </for>




     </div>





     <button type="button" onclick=`updateDevice("${input.targetBoard}")`> Update Device</button>
     <button type="button"> Cancel</button>


  </div>

</div>

<script>

       openDevice = (targetBoard, targetDevice) => {

              // Get the modal
              var modal = document.getElementById(targetBoard+"_"+ targetDevice +`_Modal`);

              // Get the button that opens the modal
              var btn = document.getElementById("targetBoard_"+targetBoard+"_device_"+ targetDevice + "_btn");

              // Get the <span> element that closes the modal
              var span = document.getElementById("targetBoard_" + targetBoard + "_device_" + targetDevice + '_Modal_closer');

              // When the user clicks on the button, open the modal
              //btn.onclick = function() {
              //  modal.style.display = "block";
              //}
              modal.style.display = "block";

              // When the user clicks on <span> (x), close the modal
              span.onclick = function() {
                modal.style.display = "none";
              }

              // When the user clicks anywhere outside of the modal, close it
              window.onclick = function(event) {
                if (event.target == modal) {
                  modal.style.display = "none";
                }
              }
      }

      updateDevice = (targetBoard) => {
          var input = document.querySelectorAll('div#device_container input'); // get the input element

          var deviceID = input[0].value
          var deviceType = input[1].value
          var deviceColor = input[2].value
          var deviceFreq = input[3].value
          var devicePin = input[4].value
          var deviceController = input[5].value


            var deviceUpdateBundle = {
              deviceID: deviceID,
              deviceTYPE: deviceType,
              devicePIN: devicePin,
              deviceBOARDS: targetBoard,
              color: deviceColor_Adder,
              controller: deviceController
              freq: deviceFreq
            }

          //console.log(deviceUpdate);
          socket.emit('update-device', deviceUpdateBundle);

      }


</script>
